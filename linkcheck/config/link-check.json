{
  "ignorePatterns": [
    {
      "pattern": "^http(s)?://localhost"
    },
    {
      "pattern": "^http(s)?://127.0.0.1"
    },
    {
      "comment": "This is a private repos",
      "pattern": "^http(s)?://gitlab.com/ConsenSys/"
    },
    {
      "comment": "This is a private repos",
      "pattern": "^http(s)?://github.com/ConsenSys/orchestrate"
    },
    {
      "comment": "This is a private repo",
      "pattern": "^http(s)?://github.com/INFURA/docs(?:/(issues|pulls))?"
    },
    {
      "comment": "Consensys.net now has a ddos attack protection",
      "pattern": "^http(s)?://consensys.net"
    },
    {
      "comment": "Exclude addresses with extra data variable placeholders (not yet replaced when checking for links)",
      "pattern": "{{[a-zA-Z_\\-\\.\\[\\]\\']+}}"
    },
    {
      "pattern": "^http(s)?://.+.zendesk.com"
    },
    {
      "pattern": "^http(s)?://.+.etherscan.io"
    },
    {
      "pattern": "^http(s)?://help.figma.com"
    },
    {
      "pattern": "^http(s)?://metamask.io"
    },
    {
      "comment": "Skip urls in the redoc macro with entity",
      "pattern": "http(s)?://.+\\&\\#39\\;"
    },
    {
      "comment": "Skip urls in the redoc macro with char",
      "pattern": "http(s)?://.+'"
    },
    {"comment": "Elon broke the twitterverse",
     "pattern": "^http(s)?://(?:www\\.)?twitter\\.com/(?:#!/)?(?:[a-zA-Z0-9_]{1,15})/status(?:es)?/(?:\\d+|\\d+/photo/\\d+)"
    },
    {
      "comment": "Docusaurus-format links",
      "pattern": "\\[.*?\\]\\([^)]+\\)"
    },
    {
      "comment": "Ignore specific GitHub commit link",
      "pattern": "^http(s)?://github.com/Consensys/linea-contracts-audit/commit/99039ebc8d6cb3009cf46286d5de4c484e03bc81"
    },
    {
      "comment": "Ignore specific HackQuest link",
      "pattern": "^http(s)?://www.hackquest.io/en/hackathon/Linea-Dev-Cook-Off"
    }
  ],
  "httpHeaders": [
    {
      "urls": [
        "https://github.com/",
        "https://guides.github.com/",
        "https://help.github.com/",
        "https://docs.github.com/"
      ],
      "headers": {
        "Accept-Encoding": "zstd, br, gzip, deflate"
      }
    }
  ],
  "timeout": "30s",
  "aliveStatusCodes":[200, 206, 400, 403],
  "retryOn429":true
}
